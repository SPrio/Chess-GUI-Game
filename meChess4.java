
import java.awt.Color;
import java.awt.GridBagConstraints;
import javax.swing.JButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Supriyo
 */
public class meChess4 extends javax.swing.JFrame {

    /**
     * Creates new form meChess
     */
    int x1, y1, x2, y2;

    //JButton btn[][]=new JButton[2][2];
    public meChess4() {
        initComponents();
        btngen();

    }
    JButton btn[][] = new JButton[8][8];

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jCheckBox1 = new javax.swing.JCheckBox();
        board = new javax.swing.JPanel();
        box1 = new javax.swing.JButton();
        box2 = new javax.swing.JButton();
        box3 = new javax.swing.JButton();
        king = new javax.swing.JButton();
        queen = new javax.swing.JButton();
        bishop2 = new javax.swing.JButton();
        knight2 = new javax.swing.JButton();
        rook2 = new javax.swing.JButton();
        box4 = new javax.swing.JButton();
        box5 = new javax.swing.JButton();
        box6 = new javax.swing.JButton();
        box7 = new javax.swing.JButton();
        box8 = new javax.swing.JButton();
        pwn1 = new javax.swing.JButton();
        pwn2 = new javax.swing.JButton();
        pwn3 = new javax.swing.JButton();
        pwn4 = new javax.swing.JButton();
        pwn5 = new javax.swing.JButton();
        pwn6 = new javax.swing.JButton();
        pwn7 = new javax.swing.JButton();
        pwn8 = new javax.swing.JButton();
        box9 = new javax.swing.JButton();
        box10 = new javax.swing.JButton();
        box11 = new javax.swing.JButton();
        box12 = new javax.swing.JButton();
        box13 = new javax.swing.JButton();
        box14 = new javax.swing.JButton();
        box15 = new javax.swing.JButton();
        box16 = new javax.swing.JButton();
        box17 = new javax.swing.JButton();
        box18 = new javax.swing.JButton();
        box19 = new javax.swing.JButton();
        box20 = new javax.swing.JButton();
        box21 = new javax.swing.JButton();
        box22 = new javax.swing.JButton();
        box23 = new javax.swing.JButton();
        box24 = new javax.swing.JButton();
        box25 = new javax.swing.JButton();
        box26 = new javax.swing.JButton();
        box27 = new javax.swing.JButton();
        box28 = new javax.swing.JButton();
        box29 = new javax.swing.JButton();
        box30 = new javax.swing.JButton();
        box31 = new javax.swing.JButton();
        box32 = new javax.swing.JButton();
        pwn9 = new javax.swing.JButton();
        pwn10 = new javax.swing.JButton();
        pwn11 = new javax.swing.JButton();
        pwn12 = new javax.swing.JButton();
        pwn13 = new javax.swing.JButton();
        pwn14 = new javax.swing.JButton();
        pwn15 = new javax.swing.JButton();
        pwn16 = new javax.swing.JButton();
        rook3 = new javax.swing.JButton();
        knight3 = new javax.swing.JButton();
        bishop3 = new javax.swing.JButton();
        king1 = new javax.swing.JButton();
        queen1 = new javax.swing.JButton();
        bishop4 = new javax.swing.JButton();
        knight4 = new javax.swing.JButton();
        rook4 = new javax.swing.JButton();
        rook1 = new javax.swing.JButton();
        knight1 = new javax.swing.JButton();
        bishop1 = new javax.swing.JButton();
        pnlBlack = new javax.swing.JPanel();
        pnlWhite = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chess Game");

        board.setBackground(new java.awt.Color(255, 255, 255));
        board.setName("box"); // NOI18N
        board.setLayout(new java.awt.GridBagLayout());

        box1.setBackground(new java.awt.Color(51, 51, 51));
        box1.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box1.setName("box"); // NOI18N
        box1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        board.add(box1, gridBagConstraints);

        box2.setBackground(new java.awt.Color(255, 255, 255));
        box2.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box2.setName("box"); // NOI18N
        box2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        board.add(box2, gridBagConstraints);

        box3.setBackground(new java.awt.Color(51, 51, 51));
        box3.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box3.setMaximumSize(new java.awt.Dimension(87, 5));
        box3.setMinimumSize(new java.awt.Dimension(87, 59));
        box3.setName("box"); // NOI18N
        box3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        board.add(box3, gridBagConstraints);

        king.setBackground(new java.awt.Color(255, 255, 255));
        king.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-king.png"))); // NOI18N
        king.setName("king_wht"); // NOI18N
        king.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        board.add(king, gridBagConstraints);

        queen.setBackground(new java.awt.Color(51, 51, 51));
        queen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-queen.png"))); // NOI18N
        queen.setName("queen_wht"); // NOI18N
        queen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        board.add(queen, gridBagConstraints);

        bishop2.setBackground(new java.awt.Color(255, 255, 255));
        bishop2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-bishop.png"))); // NOI18N
        bishop2.setName("bishop_wht"); // NOI18N
        bishop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishop2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        board.add(bishop2, gridBagConstraints);

        knight2.setBackground(new java.awt.Color(51, 51, 51));
        knight2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-knight.png"))); // NOI18N
        knight2.setName("knight_wht"); // NOI18N
        knight2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knight2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        board.add(knight2, gridBagConstraints);

        rook2.setBackground(new java.awt.Color(255, 255, 255));
        rook2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-rook.png"))); // NOI18N
        rook2.setName("rook_wht"); // NOI18N
        rook2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rook2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        board.add(rook2, gridBagConstraints);

        box4.setBackground(new java.awt.Color(255, 255, 255));
        box4.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box4.setName("box"); // NOI18N
        box4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        board.add(box4, gridBagConstraints);

        box5.setBackground(new java.awt.Color(51, 51, 51));
        box5.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box5.setName("box"); // NOI18N
        box5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        board.add(box5, gridBagConstraints);

        box6.setBackground(new java.awt.Color(255, 255, 255));
        box6.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box6.setName("box"); // NOI18N
        box6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        board.add(box6, gridBagConstraints);

        box7.setBackground(new java.awt.Color(51, 51, 51));
        box7.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box7.setName("box"); // NOI18N
        box7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        board.add(box7, gridBagConstraints);

        box8.setBackground(new java.awt.Color(255, 255, 255));
        box8.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box8.setMaximumSize(new java.awt.Dimension(87, 59));
        box8.setMinimumSize(new java.awt.Dimension(87, 59));
        box8.setName("box"); // NOI18N
        box8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        board.add(box8, gridBagConstraints);

        pwn1.setBackground(new java.awt.Color(255, 255, 255));
        pwn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn1.setName("pwn_wht"); // NOI18N
        pwn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        board.add(pwn1, gridBagConstraints);

        pwn2.setBackground(new java.awt.Color(51, 51, 51));
        pwn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn2.setName("pwn_wht"); // NOI18N
        pwn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        board.add(pwn2, gridBagConstraints);

        pwn3.setBackground(new java.awt.Color(255, 255, 255));
        pwn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn3.setName("pwn_wht"); // NOI18N
        pwn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        board.add(pwn3, gridBagConstraints);

        pwn4.setBackground(new java.awt.Color(51, 51, 51));
        pwn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn4.setName("pwn_wht"); // NOI18N
        pwn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        board.add(pwn4, gridBagConstraints);

        pwn5.setBackground(new java.awt.Color(255, 255, 255));
        pwn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn5.setName("pwn_wht"); // NOI18N
        pwn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        board.add(pwn5, gridBagConstraints);

        pwn6.setBackground(new java.awt.Color(51, 51, 51));
        pwn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn6.setName("pwn_wht"); // NOI18N
        pwn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        board.add(pwn6, gridBagConstraints);

        pwn7.setBackground(new java.awt.Color(255, 255, 255));
        pwn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn7.setName("pwn_wht"); // NOI18N
        pwn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        board.add(pwn7, gridBagConstraints);

        pwn8.setBackground(new java.awt.Color(51, 51, 51));
        pwn8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn (3).png"))); // NOI18N
        pwn8.setName("pwn_wht"); // NOI18N
        pwn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        board.add(pwn8, gridBagConstraints);

        box9.setBackground(new java.awt.Color(255, 255, 255));
        box9.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box9.setName("box"); // NOI18N
        box9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        board.add(box9, gridBagConstraints);

        box10.setBackground(new java.awt.Color(51, 51, 51));
        box10.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box10.setName("box"); // NOI18N
        box10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        board.add(box10, gridBagConstraints);

        box11.setBackground(new java.awt.Color(255, 255, 255));
        box11.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box11.setName("box"); // NOI18N
        box11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        board.add(box11, gridBagConstraints);

        box12.setBackground(new java.awt.Color(51, 51, 51));
        box12.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box12.setName("box"); // NOI18N
        box12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        board.add(box12, gridBagConstraints);

        box13.setBackground(new java.awt.Color(255, 255, 255));
        box13.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box13.setName("box"); // NOI18N
        box13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        board.add(box13, gridBagConstraints);

        box14.setBackground(new java.awt.Color(51, 51, 51));
        box14.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box14.setName("box"); // NOI18N
        box14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        board.add(box14, gridBagConstraints);

        box15.setBackground(new java.awt.Color(255, 255, 255));
        box15.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box15.setName("box"); // NOI18N
        box15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        board.add(box15, gridBagConstraints);

        box16.setBackground(new java.awt.Color(51, 51, 51));
        box16.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box16.setName("box"); // NOI18N
        box16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        board.add(box16, gridBagConstraints);

        box17.setBackground(new java.awt.Color(51, 51, 51));
        box17.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box17.setName("box"); // NOI18N
        box17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        board.add(box17, gridBagConstraints);

        box18.setBackground(new java.awt.Color(255, 255, 255));
        box18.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box18.setName("box"); // NOI18N
        box18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        board.add(box18, gridBagConstraints);

        box19.setBackground(new java.awt.Color(51, 51, 51));
        box19.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box19.setName("box"); // NOI18N
        box19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box19ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        board.add(box19, gridBagConstraints);

        box20.setBackground(new java.awt.Color(255, 255, 255));
        box20.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box20.setName("box"); // NOI18N
        box20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        board.add(box20, gridBagConstraints);

        box21.setBackground(new java.awt.Color(51, 51, 51));
        box21.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box21.setName("box"); // NOI18N
        box21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        board.add(box21, gridBagConstraints);

        box22.setBackground(new java.awt.Color(255, 255, 255));
        box22.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box22.setName("box"); // NOI18N
        box22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        board.add(box22, gridBagConstraints);

        box23.setBackground(new java.awt.Color(51, 51, 51));
        box23.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box23.setName("box"); // NOI18N
        box23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box23ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        board.add(box23, gridBagConstraints);

        box24.setBackground(new java.awt.Color(255, 255, 255));
        box24.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box24.setName("box"); // NOI18N
        box24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box24ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        board.add(box24, gridBagConstraints);

        box25.setBackground(new java.awt.Color(255, 255, 255));
        box25.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box25.setName("box"); // NOI18N
        box25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        board.add(box25, gridBagConstraints);

        box26.setBackground(new java.awt.Color(51, 51, 51));
        box26.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box26.setName("box"); // NOI18N
        box26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box26ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        board.add(box26, gridBagConstraints);

        box27.setBackground(new java.awt.Color(255, 255, 255));
        box27.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box27.setName("box"); // NOI18N
        box27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box27ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        board.add(box27, gridBagConstraints);

        box28.setBackground(new java.awt.Color(51, 51, 51));
        box28.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box28.setName("box"); // NOI18N
        box28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        board.add(box28, gridBagConstraints);

        box29.setBackground(new java.awt.Color(255, 255, 255));
        box29.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box29.setName("box"); // NOI18N
        box29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        board.add(box29, gridBagConstraints);

        box30.setBackground(new java.awt.Color(51, 51, 51));
        box30.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box30.setName("box"); // NOI18N
        box30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        board.add(box30, gridBagConstraints);

        box31.setBackground(new java.awt.Color(255, 255, 255));
        box31.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box31.setName("box"); // NOI18N
        box31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        board.add(box31, gridBagConstraints);

        box32.setBackground(new java.awt.Color(51, 51, 51));
        box32.setMargin(new java.awt.Insets(25, 25, 25, 25));
        box32.setName("box"); // NOI18N
        box32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box32ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        board.add(box32, gridBagConstraints);

        pwn9.setBackground(new java.awt.Color(51, 51, 51));
        pwn9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn9.setName("pwn_blk"); // NOI18N
        pwn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        board.add(pwn9, gridBagConstraints);

        pwn10.setBackground(new java.awt.Color(255, 255, 255));
        pwn10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn10.setName("pwn_blk"); // NOI18N
        pwn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        board.add(pwn10, gridBagConstraints);

        pwn11.setBackground(new java.awt.Color(51, 51, 51));
        pwn11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn11.setName("pwn_blk"); // NOI18N
        pwn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        board.add(pwn11, gridBagConstraints);

        pwn12.setBackground(new java.awt.Color(255, 255, 255));
        pwn12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn12.setName("pwn_blk"); // NOI18N
        pwn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        board.add(pwn12, gridBagConstraints);

        pwn13.setBackground(new java.awt.Color(51, 51, 51));
        pwn13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn13.setName("pwn_blk"); // NOI18N
        pwn13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        board.add(pwn13, gridBagConstraints);

        pwn14.setBackground(new java.awt.Color(255, 255, 255));
        pwn14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn14.setName("pwn_blk"); // NOI18N
        pwn14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        board.add(pwn14, gridBagConstraints);

        pwn15.setBackground(new java.awt.Color(51, 51, 51));
        pwn15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn15.setName("pwn_blk"); // NOI18N
        pwn15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        board.add(pwn15, gridBagConstraints);

        pwn16.setBackground(new java.awt.Color(255, 255, 255));
        pwn16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-pawn-filled.png"))); // NOI18N
        pwn16.setName("pwn_blk"); // NOI18N
        pwn16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwn16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        board.add(pwn16, gridBagConstraints);

        rook3.setBackground(new java.awt.Color(255, 255, 255));
        rook3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-rook-filled.png"))); // NOI18N
        rook3.setName("rook_blk"); // NOI18N
        rook3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rook3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        board.add(rook3, gridBagConstraints);

        knight3.setBackground(new java.awt.Color(51, 51, 51));
        knight3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-knight-filled.png"))); // NOI18N
        knight3.setName("knight_blk"); // NOI18N
        knight3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knight3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        board.add(knight3, gridBagConstraints);

        bishop3.setBackground(new java.awt.Color(255, 255, 255));
        bishop3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-bishop-filled.png"))); // NOI18N
        bishop3.setName("bishop_blk"); // NOI18N
        bishop3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishop3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        board.add(bishop3, gridBagConstraints);

        king1.setBackground(new java.awt.Color(255, 255, 255));
        king1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-king-filled.png"))); // NOI18N
        king1.setName("king_blk"); // NOI18N
        king1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                king1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        board.add(king1, gridBagConstraints);

        queen1.setBackground(new java.awt.Color(51, 51, 51));
        queen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-queen-filled.png"))); // NOI18N
        queen1.setName("queen_blk"); // NOI18N
        queen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queen1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        board.add(queen1, gridBagConstraints);

        bishop4.setBackground(new java.awt.Color(51, 51, 51));
        bishop4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-bishop-filled.png"))); // NOI18N
        bishop4.setName("bishop_blk"); // NOI18N
        bishop4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishop4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        board.add(bishop4, gridBagConstraints);

        knight4.setBackground(new java.awt.Color(255, 255, 255));
        knight4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-knight-filled.png"))); // NOI18N
        knight4.setName("knight_blk"); // NOI18N
        knight4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knight4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 7;
        board.add(knight4, gridBagConstraints);

        rook4.setBackground(new java.awt.Color(51, 51, 51));
        rook4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-rook-filled.png"))); // NOI18N
        rook4.setName("rook_blk"); // NOI18N
        rook4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rook4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 7;
        board.add(rook4, gridBagConstraints);

        rook1.setBackground(new java.awt.Color(51, 51, 51));
        rook1.setForeground(new java.awt.Color(255, 255, 255));
        rook1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-rook.png"))); // NOI18N
        rook1.setName("rook_wht"); // NOI18N
        rook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rook1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        board.add(rook1, gridBagConstraints);

        knight1.setBackground(new java.awt.Color(255, 255, 255));
        knight1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-knight.png"))); // NOI18N
        knight1.setName("knight_wht"); // NOI18N
        knight1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knight1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        board.add(knight1, gridBagConstraints);

        bishop1.setBackground(new java.awt.Color(51, 51, 51));
        bishop1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-bishop.png"))); // NOI18N
        bishop1.setName("bishop_wht"); // NOI18N
        bishop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bishop1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        board.add(bishop1, gridBagConstraints);

        jMenu1.setText("File");

        jMenuItem1.setText("New Game");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(board, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBlack, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .addComponent(pnlWhite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBlack, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlWhite, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(board, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
GridBagConstraints gridBagConstraints1 = new GridBagConstraints();
    JButton tmp;

    private void rook4ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void rook3ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void rook2ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }


    private void knight4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knight4ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_knight4ActionPerformed
    private void knight3ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void knight2ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }


    private void bishop4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bishop4ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_bishop4ActionPerformed
    private void bishop3ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void bishop2ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }


    private void queen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queen1ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_queen1ActionPerformed
    private void queenActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void king1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_king1ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_king1ActionPerformed
    private void kingActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }


    private void pwn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn8ActionPerformed
        swap(evt);
    }//GEN-LAST:event_pwn8ActionPerformed

    private void pwn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn7ActionPerformed
        // TODO add your handling code here:
        swap(evt);
    }//GEN-LAST:event_pwn7ActionPerformed

    private void pwn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn6ActionPerformed
        // TODO add your handling code here:
        swap(evt);
    }//GEN-LAST:event_pwn6ActionPerformed

    private void pwn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn5ActionPerformed
        // TODO add your handling code here:
        swap(evt);
    }//GEN-LAST:event_pwn5ActionPerformed

    private void pwn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn4ActionPerformed
        // TODO add your handling code here:
        swap(evt);
    }//GEN-LAST:event_pwn4ActionPerformed

    private void pwn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn3ActionPerformed
        swap(evt);
    }//GEN-LAST:event_pwn3ActionPerformed

    private void pwn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn2ActionPerformed
        swap(evt);
    }//GEN-LAST:event_pwn2ActionPerformed

    private void pwn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn1ActionPerformed
        swap(evt);
    }//GEN-LAST:event_pwn1ActionPerformed


    private void pwn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn9ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn9ActionPerformed

    private void pwn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn10ActionPerformed
        swap(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_pwn10ActionPerformed

    private void pwn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn11ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn11ActionPerformed

    private void pwn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn12ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn12ActionPerformed

    private void pwn13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn13ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn13ActionPerformed

    private void pwn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn14ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn14ActionPerformed

    private void pwn15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn15ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn15ActionPerformed

    private void pwn16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwn16ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pwn16ActionPerformed

    private void box1ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box2ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box3ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box4ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box5ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box6ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box7ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box8ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box9ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box10ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box11ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box12ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box13ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box14ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box15ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box16ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box17ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box18ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box19ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box20ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box21ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box22ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box23ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box24ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box25ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box26ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box27ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box28ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box29ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box30ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }

    private void box31ActionPerformed(java.awt.event.ActionEvent evt) {
        swap(evt);        // TODO add your handling code here:
    }
     private void box32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box32ActionPerformed
         swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_box32ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void rook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rook1ActionPerformed
        // TODO add your handling code here:
        swap(evt);
    }//GEN-LAST:event_rook1ActionPerformed

    private void knight1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knight1ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_knight1ActionPerformed

    private void bishop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bishop1ActionPerformed
        swap(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_bishop1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(meChess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(meChess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(meChess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(meChess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new meChess4().setVisible(true);

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bishop1;
    private javax.swing.JButton bishop2;
    private javax.swing.JButton bishop3;
    private javax.swing.JButton bishop4;
    private javax.swing.JPanel board;
    private javax.swing.JButton box1;
    private javax.swing.JButton box10;
    private javax.swing.JButton box11;
    private javax.swing.JButton box12;
    private javax.swing.JButton box13;
    private javax.swing.JButton box14;
    private javax.swing.JButton box15;
    private javax.swing.JButton box16;
    private javax.swing.JButton box17;
    private javax.swing.JButton box18;
    private javax.swing.JButton box19;
    private javax.swing.JButton box2;
    private javax.swing.JButton box20;
    private javax.swing.JButton box21;
    private javax.swing.JButton box22;
    private javax.swing.JButton box23;
    private javax.swing.JButton box24;
    private javax.swing.JButton box25;
    private javax.swing.JButton box26;
    private javax.swing.JButton box27;
    private javax.swing.JButton box28;
    private javax.swing.JButton box29;
    private javax.swing.JButton box3;
    private javax.swing.JButton box30;
    private javax.swing.JButton box31;
    private javax.swing.JButton box32;
    private javax.swing.JButton box4;
    private javax.swing.JButton box5;
    private javax.swing.JButton box6;
    private javax.swing.JButton box7;
    private javax.swing.JButton box8;
    private javax.swing.JButton box9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JButton king;
    private javax.swing.JButton king1;
    private javax.swing.JButton knight1;
    private javax.swing.JButton knight2;
    private javax.swing.JButton knight3;
    private javax.swing.JButton knight4;
    private javax.swing.JPanel pnlBlack;
    private javax.swing.JPanel pnlWhite;
    private javax.swing.JButton pwn1;
    private javax.swing.JButton pwn10;
    private javax.swing.JButton pwn11;
    private javax.swing.JButton pwn12;
    private javax.swing.JButton pwn13;
    private javax.swing.JButton pwn14;
    private javax.swing.JButton pwn15;
    private javax.swing.JButton pwn16;
    private javax.swing.JButton pwn2;
    private javax.swing.JButton pwn3;
    private javax.swing.JButton pwn4;
    private javax.swing.JButton pwn5;
    private javax.swing.JButton pwn6;
    private javax.swing.JButton pwn7;
    private javax.swing.JButton pwn8;
    private javax.swing.JButton pwn9;
    private javax.swing.JButton queen;
    private javax.swing.JButton queen1;
    private javax.swing.JButton rook1;
    private javax.swing.JButton rook2;
    private javax.swing.JButton rook3;
    private javax.swing.JButton rook4;
    // End of variables declaration//GEN-END:variables
    //required classes / methods
    JButton btnT;
    int x3, y3, x4, y4;

    void reset() {
        int x = 0, y = 0, i = 0, j = 0;
        //reset
        Color even = Color.DARK_GRAY;
        Color odd = Color.WHITE;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (j % 2 == 0) {
                    btn[i][j].setBackground(even);
                } else {
                    btn[i][j].setBackground(odd);
                }
            }
            Color temp = even;
            even = odd;
            odd = temp;
        }
    }

    boolean isFriend(JButton btn2, JButton tmp) {
        String btnName2 = btn2.getName();
        String btnName = tmp.getName();
        if (btnName2.endsWith(String.valueOf(btnName.charAt(btnName.length() - 1)))) {
            return true;
        } else {
            return false;
        }
    }

    boolean validAxis(int x, int y) {
        if (x >= 0 && x < 8 && y >= 0 && y < 8) {
            return true;
        } else {
            return false;
        }
    }

    void setPathForPwnw(JButton pwnw) {

        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == pwnw) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }

        if (y + 1 < 8 && y + 1 >= 0) {
            if (btn[x][y + 1].getName().equals("box")) {
                btn[x][y + 1].setBackground(Color.YELLOW);
            }
        }
        if (x - 1 < 8 && x - 1 >= 0 && y + 1 >= 0 && y + 1 < 8) {
            if ((btn[x - 1][y + 1].getName().endsWith("k"))) {
                btn[x - 1][y + 1].setBackground(Color.YELLOW);
            }
        }
        if (x + 1 < 8 && x + 1 >= 0 && y + 1 >= 0 && y + 1 < 8) {
            if (btn[x + 1][y + 1].getName().endsWith("k")) {
                btn[x + 1][y + 1].setBackground(Color.YELLOW);
            }
        }

    }

    void setPathForPwnb(JButton pwnw) {

        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == pwnw) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }

        if (y - 1 >= 0 && x >= 0) {
            if (btn[x][y - 1].getName().equals("box")) {
                btn[x][y - 1].setBackground(Color.YELLOW);
            }
        }
        if (x - 1 >= 0 && y - 1 >= 0) {
            if ((btn[x - 1][y - 1].getName().endsWith("t"))) {
                btn[x - 1][y - 1].setBackground(Color.YELLOW);
            }
        }
        if (x + 1 < 8 && y - 1 < 8) {
            if (btn[x + 1][y - 1].getName().endsWith("t")) {
                btn[x + 1][y - 1].setBackground(Color.YELLOW);
            }
        }

    }
    void setPathForKnight(JButton knt) {
        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == knt) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }

        if (validAxis(x - 1, y + 2)) {
            if (!isFriend(btn[x][y], btn[x - 1][y + 2])) {
                // if(btn[x-1][y+2].getName()=="box"){
                btn[x - 1][y + 2].setBackground(Color.YELLOW);
                // }
            }

        }

        if (validAxis(x - 1, y - 2)) {
            if (!isFriend(btn[x][y], btn[x - 1][y - 2])) {
                //   if(btn[x-1][y-2].getName()=="box"){
                btn[x - 1][y - 2].setBackground(Color.YELLOW);
                //   }
            }
        }

        if (validAxis(x - 2, y + 1)) {
            if (!isFriend(btn[x][y], btn[x - 2][y + 1])) {
                //  if(btn[x-2][y+1].getName()=="box"){
                btn[x - 2][y + 1].setBackground(Color.YELLOW);
                //  }
            }
        }

        if (validAxis(x - 2, y - 1)) {
            if (!isFriend(btn[x][y], btn[x - 2][y - 1])) {
                //  if(btn[x-2][y-1].getName()=="box"){
                btn[x - 2][y - 1].setBackground(Color.YELLOW);
                //  }
            }
        }

        if (validAxis(x + 1, y + 2)) {
            if (!isFriend(btn[x][y], btn[x + 1][y + 2])) {
                // if(btn[x+1][y+2].getName()=="box"){
                btn[x + 1][y + 2].setBackground(Color.YELLOW);
                //  }
            }
        }

        if (validAxis(x + 1, y - 2)) {
            if (!isFriend(btn[x][y], btn[x + 1][y - 2])) {
                // if(btn[x+1][y-2].getName()=="box"){
                btn[x + 1][y - 2].setBackground(Color.YELLOW);
                // }
            }
        }

        if (validAxis(x + 2, y + 1)) {
            if (!isFriend(btn[x][y], btn[x + 2][y + 1])) {
                //  if(btn[x+2][y+1].getName()=="box"){
                btn[x + 2][y + 1].setBackground(Color.YELLOW);
                //  }
            }
        }

        if (validAxis(x + 2, y - 1)) {
            if (!isFriend(btn[x][y], btn[x + 2][y - 1])) {
                //  if(btn[x+2][y-1].getName()=="box"){
                btn[x + 2][y - 1].setBackground(Color.YELLOW);
                //  }
            }
        }

    }

    void setPathForRook(JButton btn2) {
        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == btn2) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }
        //for left only
        for (i = x - 1, j = y; i >= 0; i--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right only
        for (i = x + 1, j = y; i < 8; i++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for up only
        for (i = x, j = y - 1; j >= 0; j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for down only
        for (i = x, j = y + 1; j < 8; j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
    }

    void setPathForBishop(JButton btn2) {
        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == btn2) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }
        //for left-up only
        for (i = x - 1, j = y - 1; i >= 0 && j >= 0; i--, j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right-down only
        for (i = x + 1, j = y + 1; i < 8 && j < 8; i++, j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right-up only
        for (i = x + 1, j = y - 1; i < 8 && j >= 0; i++, j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for left-down only
        for (i = x - 1, j = y + 1; i >= 0 && j < 8; i--, j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
    }

    void setPathForKing(JButton btn2) {
        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == btn2) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }
        if (validAxis(x - 1, y - 1)) {
            if (!isFriend(btn[x][y], btn[x - 1][y - 1])) {
                // if(btn[x-1][y-1].getName()=="box"){
                btn[x - 1][y - 1].setBackground(Color.YELLOW);
                //}
            }
        }
        if (validAxis(x, y - 1)) {
            if (!isFriend(btn[x][y], btn[x][y - 1])) {
                //  if(btn[x][y-1].getName()=="box"){
                btn[x][y - 1].setBackground(Color.YELLOW);
                //  }
            }
        }
        if (validAxis(x + 1, y - 1)) {
            if (!isFriend(btn[x][y], btn[x + 1][y - 1])) {
                // if(btn[x+1][y-1].getName()=="box"){
                btn[x + 1][y - 1].setBackground(Color.YELLOW);
                //  }
            }
        }
        if (validAxis(x - 1, y)) {
            if (!isFriend(btn[x][y], btn[x - 1][y])) {
                //  if(btn[x-1][y].getName()=="box"){
                btn[x - 1][y].setBackground(Color.YELLOW);
                //  }
            }
        }
        if (validAxis(x + 1, y)) {
            if (!isFriend(btn[x][y], btn[x + 1][y])) {
                //   if(btn[x+1][y].getName()=="box"){
                btn[x + 1][y].setBackground(Color.YELLOW);
                //   }
            }
        }
        if (validAxis(x - 1, y + 1)) {
            if (!isFriend(btn[x][y], btn[x - 1][y + 1])) {
                // if(btn[x-1][y+1].getName()=="box"){
                btn[x - 1][y + 1].setBackground(Color.YELLOW);
                //  }
            }
        }
        if (validAxis(x, y + 1)) {
            if (!isFriend(btn[x][y], btn[x][y + 1])) {
                //  if(btn[x][y+1].getName()=="box"){
                btn[x][y + 1].setBackground(Color.YELLOW);
                // }
            }

        }
        if (validAxis(x + 1, y + 1)) {
            if (!isFriend(btn[x][y], btn[x + 1][y + 1])) {
                //   if(btn[x+1][y+1].getName()=="box"){
                btn[x + 1][y + 1].setBackground(Color.YELLOW);
                //  }
            }
        }
    }

    void setPathForQueen(JButton btn2) {
        //JButton btn2 = queen;
        int x = 0, y = 0, i = 0, j = 0;
        for (i = 0; i < 8; i++) {
            for (j = 0; j < 8; j++) {
                if (btn[i][j] == btn2) {
                    x = i;
                    y = j;
                    break;
                }

            }
        }
        //for left only
        for (i = x - 1, j = y; i >= 0; i--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right only
        for (i = x + 1, j = y; i < 8; i++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for up only
        for (i = x, j = y - 1; j >= 0; j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for down only
        for (i = x, j = y + 1; j < 8; j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for left-up only
        for (i = x - 1, j = y - 1; i >= 0 && j >= 0; i--, j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right-down only
        for (i = x + 1, j = y + 1; i < 8 && j < 8; i++, j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for right-up only
        for (i = x + 1, j = y - 1; i < 8 && j >= 0; i++, j--) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
        //for left-down only
        for (i = x - 1, j = y + 1; i >= 0 && j < 8; i--, j++) {
            if (isFriend(btn2, btn[i][j])) {
                break;
            }
            btn[i][j].setBackground(Color.YELLOW);
            if (!btn[i][j].getName().equals("box")) {
                break;
            }
        }
    }

    boolean isCorrectMove(JButton btn2) {
        if (btn2.getBackground().equals(Color.YELLOW)) {
            return true;
        }
        return false;
    }

    JButton attack(JButton btn2, int bx, int by) {
        if (!btn2.getName().equals("box")) {
            JButton box = new JButton();

            box.setMargin(new java.awt.Insets(25, 25, 25, 25));
            box.setMaximumSize(new java.awt.Dimension(87, 5));
            box.setMinimumSize(new java.awt.Dimension(87, 59));
            box.setName("box");
            gridBagConstraints1 = new GridBagConstraints();

            gridBagConstraints1.gridx = bx;
            gridBagConstraints1.gridy = by;
            board.add(box, gridBagConstraints1);

            //////////////////////
            //box3.setBackground(new java.awt.Color(51, 51, 51));
            // NOI18N
            box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    swap(evt);
                }
            });
//        gridBagConstraints = new java.awt.GridBagConstraints();
//        gridBagConstraints.gridx = 2;
//        gridBagConstraints.gridy = 2;
//        board.add(box3, gridBagConstraints);
            //////////////////////

            btn[bx][by] = box;

            if (btn2.getName().endsWith("t")) {
                pnlBlack.add(btn2);
            } else {
                pnlWhite.add(btn2);
            }
            return box;
        } else {
            return btn2;
        }
    }

    void swap(java.awt.event.ActionEvent evt) {
        JButton tmp = null;
        Color btn2C = null, btnTC = null;
        JButton btn2 = (JButton) evt.getSource();
        //btn2.getbac//color swap using gety color

        //System.out.println(btn2.getName());
        if (btnT == null) {
            btnT = btn2;
            if (btnT.getName() == "queen_wht" || btnT.getName() == "queen_blk") {
                setPathForQueen(btnT);
            }
            if (btnT.getName() == "pwn_wht") {
                setPathForPwnw(btnT);
            }
            if (btnT.getName() == "pwn_blk") {
                setPathForPwnb(btnT);
            }
            if (btnT.getName() == "knight_wht" || btnT.getName() == "knight_blk") {
                setPathForKnight(btnT);
            }
            if (btnT.getName() == "rook_wht" || btnT.getName() == "rook_blk") {
                setPathForRook(btnT);
            }
            if (btnT.getName() == "bishop_wht" || btnT.getName() == "bishop_blk") {
                setPathForBishop(btnT);
            }
            if (btnT.getName() == "king_wht" || btnT.getName() == "king_blk") {
                setPathForKing(btnT);
            }
            //checking2nd(btn2);
        } else if (btnT == btn2) {
            btnT = null;
            reset();
        } else if (btnT != btn2 && isCorrectMove(btn2)) {

            for (int i = 0; i < 8; i++) {
                for (int j = 0; j < 8; j++) {
                    if (btn[i][j] == btn2) {
                        btn2C = btn[i][j].getBackground();
                        x1 = i;
                        y1 = j;
                    }
                    if (btn[i][j] == btnT) {
                        btnTC = btn[i][j].getBackground();
                        x2 = i;
                        y2 = j;
                    }
                }
            }

            //checking(btnT, btn2);
            btn2 = attack(btn2, x1, y1);
            System.out.println(x1 + " " + y1 + " " + x2 + " " + y2);

            gridBagConstraints1 = new GridBagConstraints();

            gridBagConstraints1.gridx = x1;
            gridBagConstraints1.gridy = y1;
            board.add(btnT, gridBagConstraints1);
            //  btnT.setBackground(btn2C);

            gridBagConstraints1.gridx = x2;
            gridBagConstraints1.gridy = y2;
            board.add(btn2, gridBagConstraints1);
            // btn2.setBackground(btnTC);

            tmp = btn[x1][y1];
            btn[x1][y1] = btn[x2][y2];
            btn[x2][y2] = tmp;
            //checking2nd(btn2);

            btnT = null;
            reset();
            board.updateUI();
        }
    }

    private void btngen() {

        btn[0][0] = rook1;
        btn[1][0] = knight1;
        btn[2][0] = bishop1;
        btn[3][0] = king;
        btn[4][0] = queen;
        btn[5][0] = bishop2;
        btn[6][0] = knight2;
        btn[7][0] = rook2;

        btn[0][1] = pwn1;
        btn[1][1] = pwn2;
        btn[2][1] = pwn3;
        btn[3][1] = pwn4;
        btn[4][1] = pwn5;
        btn[5][1] = pwn6;
        btn[6][1] = pwn7;
        btn[7][1] = pwn8;

        btn[0][2] = box1;
        btn[1][2] = box2;
        btn[2][2] = box3;
        btn[3][2] = box4;
        btn[4][2] = box5;
        btn[5][2] = box6;
        btn[6][2] = box7;
        btn[7][2] = box8;

        btn[0][3] = box9;
        btn[1][3] = box10;
        btn[2][3] = box11;
        btn[3][3] = box12;
        btn[4][3] = box13;
        btn[5][3] = box14;
        btn[6][3] = box15;
        btn[7][3] = box16;

        btn[0][4] = box17;
        btn[1][4] = box18;
        btn[2][4] = box19;
        btn[3][4] = box20;
        btn[4][4] = box21;
        btn[5][4] = box22;
        btn[6][4] = box23;
        btn[7][4] = box24;

        btn[0][5] = box25;
        btn[1][5] = box26;
        btn[2][5] = box27;
        btn[3][5] = box28;
        btn[4][5] = box29;
        btn[5][5] = box30;
        btn[6][5] = box31;
        btn[7][5] = box32;

        btn[0][6] = pwn9;
        btn[1][6] = pwn10;
        btn[2][6] = pwn11;
        btn[3][6] = pwn12;
        btn[4][6] = pwn13;
        btn[5][6] = pwn14;
        btn[6][6] = pwn15;
        btn[7][6] = pwn16;

        btn[0][7] = rook3;
        btn[1][7] = knight3;
        btn[2][7] = bishop3;
        btn[3][7] = queen1;
        btn[4][7] = king1;
        btn[5][7] = bishop4;
        btn[6][7] = knight4;
        btn[7][7] = rook4;
    }
    void newgame(){
        //update coming soon
    }
    void savegame(){
        //update coming soon
    }
}
